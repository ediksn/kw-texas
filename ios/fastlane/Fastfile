fastlane_require 'dotenv'

default_platform(:ios)

platform :ios do
  VERSION = ENV['VERSION']
  RELEASE_NOTES = ENV['RELEASE_NOTES']
  FIREBASE_TOKEN = ENV['FIREBASE_TOKEN']
  LIFE_CYCLE = ENV['LIFE_CYCLE']
  TESTERS = ENV['TESTERS']
  GROUPS = ENV['GROUPS']
  PROD_RELEASE = LIFE_CYCLE === 'prod'

  desc "Submit a new Release Build to #{GROUPS} group"
  lane :distribute_release do
    ios_set_version(
      version: VERSION,
      xcodeproj: "app.xcodeproj"
    )

    ios_set_build_number(
      xcodeproj: "app.xcodeproj"
    )

    update_code_signing_settings(
      path: "app.xcodeproj",
      use_automatic_signing: true
    )

    clear_derived_data

    build_app(
      scheme: "app",
      workspace: "app.xcworkspace",
      clean: true,
      export_method: "#{PROD_RELEASE ? 'app-store' : 'ad-hoc'}",
      export_options: {
        provisioningProfiles: { 
          "com.connect.mobile.app" => "#{PROD_RELEASE ? 'App Store distribution (CNT)' : 'App Hoc distribution (CNT)'}"
        }
      },
      xcargs: "-allowProvisioningUpdates"
    )

    if (!PROD_RELEASE)
      firebase_app_distribution(
        app: "???",
        testers: TESTERS,
        groups: GROUPS,
        release_notes: RELEASE_NOTES,
        firebase_cli_token: FIREBASE_TOKEN
      )
    else
      app_store_connect_api_key(
        key_id: "?",
        issuer_id: "?",
        key_filepath: "./fastlane/AuthKey_???.p8",
        duration: 1200, # optional (maximum 1200)
        in_house: false # optional but may be required if using match/sigh
      )

      # Automatically loads Actions.lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]
      # pilot

      # sync_code_signing(type: "appstore")

      upload_to_testflight(
        email: "e_morales-itaik@kw.com"
      )
      # upload_to_app_store
    end
  end
end
